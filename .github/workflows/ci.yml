name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend tests and linting
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: false
      
      - name: Check environment configuration
        run: npm run check-env
        continue-on-error: true
        env:
          MONGO_URI: ${{ secrets.MONGO_URI || 'mongodb://localhost:27017/test' }}
          JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-secret-key-for-ci' }}
          NODE_ENV: test
      
      - name: Run tests (if available)
        run: npm test
        continue-on-error: true
        env:
          MONGO_URI: mongodb://localhost:27017/test
          JWT_SECRET: test-secret-key-for-ci
          NODE_ENV: test

  # Frontend tests and linting
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: false
      
      - name: Build frontend
        run: npm run build
        env:
          VITE_API_BASE_URL: http://localhost:4000/api/v1
          VITE_SOCKET_URL: http://localhost:4000
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 7

  # Combined predeploy checks
  predeploy-check:
    name: Pre-Deploy Verification
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install backend dependencies
        run: cd backend && npm ci
      
      - name: Install frontend dependencies
        run: cd frontend && npm ci
      
      - name: Run backend predeploy check
        run: cd backend && npm run predeploy-check
        env:
          MONGO_URI: mongodb://localhost:27017/test
          JWT_SECRET: test-secret-key-for-ci
          NODE_ENV: production
      
      - name: Run frontend predeploy check
        run: cd frontend && npm run predeploy-check
        env:
          VITE_API_BASE_URL: https://your-backend.onrender.com/api/v1
          VITE_SOCKET_URL: https://your-backend.onrender.com
      
      - name: Deployment readiness
        run: |
          echo "âœ… All pre-deployment checks passed!"
          echo "Backend: Linted, environment validated"
          echo "Frontend: Linted, built successfully"
          echo "Ready for deployment to production"
